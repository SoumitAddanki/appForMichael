{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/kritika/atlas_digital/appForMichael/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// Supabase client\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\ntype Video = {\n  id: string\n  title: string         // Changed from video_title\n  description: string\n  videoYTId: string     // Changed from video_link\n  sectionTitle: string  // New field\n  watched_fully: boolean\n  skill: number\n  OTT: boolean\n  APP: boolean\n  ARG: boolean\n  PUTT: boolean\n}\n\ntype Section = {\n  id: string\n  name: string\n  description: string\n  skill: string\n}\n\nexport default function DashboardPage() {\n  const [videos, setVideos] = useState<Video[]>([])\n  const [loading, setLoading] = useState(true)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [sections, setSections] = useState<Section[]>([])\n  const [selectedSections, setSelectedSections] = useState<string[]>([])\n  const [isSaving, setIsSaving] = useState(false)\n  const [errorMsg, setErrorMsg] = useState<string | null>(null)\n\n  const [newVideo, setNewVideo] = useState<Omit<Video, 'id'>>({\n    title: '',             // Changed from video_title\n    description: '',\n    videoYTId: '',         // Changed from video_link\n    sectionTitle: '',      // New field\n    watched_fully: false,\n    skill: 1,\n    OTT: false,\n    APP: false,\n    ARG: false,\n    PUTT: false,\n  })\n\n  // Fetch videos\n  const fetchVideos = async () => {\n    setLoading(true)\n    const { data, error } = await supabase\n      .from('videos')\n      .select('*')\n      .order('id', { ascending: false })\n    if (!error && data) setVideos(data)\n    setLoading(false)\n  }\n\n  // Fetch sections\n  const fetchSections = async () => {\n    const { data, error } = await supabase.from('sections').select('*')\n    if (!error && data) setSections(data)\n  }\n\n  useEffect(() => {\n    fetchVideos()\n    fetchSections()\n  }, [])\n\n  // Handle section checkbox\n  const handleSectionCheckbox = (id: string) => {\n    setSelectedSections(prev =>\n      prev.includes(id) ? prev.filter(sectionId => sectionId !== id) : [...prev, id]\n    )\n  }\n\n  // Add video handler\n  const addVideo = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsSaving(true)\n    setErrorMsg(null)\n    try {\n      // Insert video\n      const { data: video, error } = await supabase\n        .from('videos')\n        .insert([newVideo])\n        .select()\n        .single()\n\n      if (error) {\n        setErrorMsg(error.message)\n        setIsSaving(false)\n        return\n      }\n\n      // Link to sections if any selected\n      if (video && selectedSections.length > 0) {\n        const relations = selectedSections.map(sectionId => ({\n          section_id: sectionId,\n          video_id: video.id,\n        }))\n        const { error: relError } = await supabase\n          .from('section_videos')\n          .insert(relations)\n        if (relError) {\n          setErrorMsg('Video created, but failed to link to sections.')\n        }\n      }\n\n      // Success: refresh, reset, close modal\n      await fetchVideos()\n      setIsModalOpen(false)\n      setNewVideo({\n        title: '',          // Changed from video_title\n        description: '',\n        videoYTId: '',      // Changed from video_link\n        sectionTitle: '',   // New field\n        watched_fully: false,\n        skill: 1,\n        OTT: false,\n        APP: false,\n        ARG: false,\n        PUTT: false,\n      })\n      setSelectedSections([])\n    } catch (err: any) {\n      setErrorMsg('Unexpected error: ' + (err?.message || String(err)))\n    }\n    setIsSaving(false)\n  }\n\n  return (\n    <div className=\"flex min-h-screen bg-[#18181b] text-white\">\n      {/* Sidebar (simplified) */}\n      <aside className=\"w-64 bg-[#232329] p-6 flex flex-col\">\n        <div className=\"mb-8 font-bold text-lg\">Michael Dutro</div>\n      </aside>\n\n      {/* Main Content */}\n      <main className=\"flex-1 p-10\">\n        <div className=\"mb-6 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-semibold\">Video List</h1>\n          <button\n            onClick={() => setIsModalOpen(true)}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded flex items-center\"\n          >\n            <span className=\"mr-2 text-xl\">+</span> Add Video\n          </button>\n        </div>\n\n        {/* Table */}\n        <div className=\"bg-[#232329] rounded-lg overflow-x-auto\">\n          <table className=\"min-w-full text-sm\">\n            <thead>\n              <tr className=\"bg-[#232329] text-gray-400\">\n                <th className=\"px-4 py-3 text-left\">ID</th>\n                <th className=\"px-4 py-3 text-left\">Title</th>\n                <th className=\"px-4 py-3 text-left\">Section Title</th>\n                <th className=\"px-4 py-3 text-left\">Description</th>\n                <th className=\"px-4 py-3 text-left\">YouTube ID</th>\n                <th className=\"px-4 py-3 text-left\">Watched</th>\n                <th className=\"px-4 py-3 text-left\">Skill</th>\n                <th className=\"px-4 py-3 text-left\">OTT</th>\n                <th className=\"px-4 py-3 text-left\">APP</th>\n                <th className=\"px-4 py-3 text-left\">ARG</th>\n                <th className=\"px-4 py-3 text-left\">PUTT</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loading ? (\n                <tr>\n                  <td colSpan={11} className=\"text-center py-6\">Loading...</td>\n                </tr>\n              ) : videos.length === 0 ? (\n                <tr>\n                  <td colSpan={11} className=\"text-center py-6 text-gray-400\">\n                    No videos found. Click the + button to add one.\n                  </td>\n                </tr>\n              ) : (\n                videos.map((video) => (\n                  <tr key={video.id} className=\"border-b border-[#2c2c34] hover:bg-[#23232b]\">\n                    <td className=\"px-4 py-3\">{video.id}</td>\n                    <td className=\"px-4 py-3\">{video.title}</td>\n                    <td className=\"px-4 py-3\">{video.sectionTitle}</td>\n                    <td className=\"px-4 py-3\">{video.description}</td>\n                    <td className=\"px-4 py-3\">{video.videoYTId}</td>\n                    <td className=\"px-4 py-3\">{video.watched_fully ? '✅' : ''}</td>\n                    <td className=\"px-4 py-3\">{video.skill}</td>\n                    <td className=\"px-4 py-3\">{video.OTT ? '✅' : ''}</td>\n                    <td className=\"px-4 py-3\">{video.APP ? '✅' : ''}</td>\n                    <td className=\"px-4 py-3\">{video.ARG ? '✅' : ''}</td>\n                    <td className=\"px-4 py-3\">{video.PUTT ? '✅' : ''}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Add Video Modal */}\n        {isModalOpen && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-[#232329] rounded-lg p-6 w-full max-w-md\">\n              <h2 className=\"text-xl font-bold mb-4\">Add New Video</h2>\n              {errorMsg && (\n                <div className=\"mb-4 text-red-400\">{errorMsg}</div>\n              )}\n              <form onSubmit={addVideo}>\n                <div className=\"mb-4\">\n                  <label className=\"block mb-2\">Video Title</label>\n                  <input\n                    className=\"block w-full mb-2 p-2 text-black rounded-md\"\n                    placeholder=\"Video Title\"\n                    value={newVideo.title}\n                    onChange={e => setNewVideo({ ...newVideo, title: e.target.value })}\n                    required\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block mb-2\">Section Title</label>\n                  <input\n                    className=\"block w-full mb-2 p-2 text-black rounded-md\"\n                    placeholder=\"Section Title\"\n                    value={newVideo.sectionTitle}\n                    onChange={e => setNewVideo({ ...newVideo, sectionTitle: e.target.value })}\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block mb-2\">Description</label>\n                  <textarea\n                    className=\"block w-full mb-2 p-2 text-black rounded-md\"\n                    placeholder=\"Description\"\n                    value={newVideo.description}\n                    onChange={e => setNewVideo({ ...newVideo, description: e.target.value })}\n                    rows={2}\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block mb-2\">YouTube Video ID</label>\n                  <input\n                    className=\"block w-full mb-2 p-2 text-black rounded-md\"\n                    placeholder=\"YouTube Video ID\"\n                    value={newVideo.videoYTId}\n                    onChange={e => setNewVideo({ ...newVideo, videoYTId: e.target.value })}\n                    required\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block mb-2\">Watched Fully</label>\n                  <input\n                    type=\"checkbox\"\n                    checked={newVideo.watched_fully}\n                    onChange={() => setNewVideo({ ...newVideo, watched_fully: !newVideo.watched_fully })}\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block mb-2\">Skill</label>\n                  <input\n                    className=\"block w-full mb-2 p-2 text-black rounded-md\"\n                    type=\"number\"\n                    min={1}\n                    max={3}\n                    value={newVideo.skill}\n                    onChange={e => setNewVideo({ ...newVideo, skill: parseInt(e.target.value) })}\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={newVideo.OTT}\n                      onChange={() => setNewVideo({ ...newVideo, OTT: !newVideo.OTT })}\n                      className=\"mr-2\"\n                    />\n                    OTT\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={newVideo.APP}\n                      onChange={() => setNewVideo({ ...newVideo, APP: !newVideo.APP })}\n                      className=\"mr-2\"\n                    />\n                    APP\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={newVideo.ARG}\n                      onChange={() => setNewVideo({ ...newVideo, ARG: !newVideo.ARG })}\n                      className=\"mr-2\"\n                    />\n                    ARG\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={newVideo.PUTT}\n                      onChange={() => setNewVideo({ ...newVideo, PUTT: !newVideo.PUTT })}\n                      className=\"mr-2\"\n                    />\n                    PUTT\n                  </label>\n                </div>\n                <div className=\"mb-4\">\n                  <h2 className=\"text-lg mb-2\">Assign to Sections:</h2>\n                  <div className=\"max-h-40 overflow-y-auto bg-[#18181b] p-2 rounded-md\">\n                    {sections.map(section => (\n                      <label key={section.id} className=\"flex items-center mb-1\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedSections.includes(section.id)}\n                          onChange={() => handleSectionCheckbox(section.id)}\n                          className=\"mr-2\"\n                        />\n                        <span>{section.name}</span>\n                      </label>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"flex justify-end space-x-3\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setIsModalOpen(false)}\n                    className=\"px-4 py-2 bg-[#18181b] text-white rounded-md hover:bg-[#27272f]\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n                    disabled={isSaving}\n                  >\n                    {isSaving ? 'Adding...' : 'Add Video'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;AAOE;;AALF;AACA;;;AAHA;;;AAKA,kBAAkB;AAClB,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD;AA0Bb,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAExD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB;QAC1D,OAAO;QACP,aAAa;QACb,WAAW;QACX,cAAc;QACd,eAAe;QACf,OAAO;QACP,KAAK;QACL,KAAK;QACL,KAAK;QACL,MAAM;IACR;IAEA,eAAe;IACf,MAAM,cAAc;QAClB,WAAW;QACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,UACL,MAAM,CAAC,KACP,KAAK,CAAC,MAAM;YAAE,WAAW;QAAM;QAClC,IAAI,CAAC,SAAS,MAAM,UAAU;QAC9B,WAAW;IACb;IAEA,iBAAiB;IACjB,MAAM,gBAAgB;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,YAAY,MAAM,CAAC;QAC/D,IAAI,CAAC,SAAS,MAAM,YAAY;IAClC;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR;YACA;QACF;kCAAG,EAAE;IAEL,0BAA0B;IAC1B,MAAM,wBAAwB,CAAC;QAC7B,oBAAoB,CAAA,OAClB,KAAK,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC,CAAA,YAAa,cAAc,MAAM;mBAAI;gBAAM;aAAG;IAElF;IAEA,oBAAoB;IACpB,MAAM,WAAW,OAAO;QACtB,EAAE,cAAc;QAChB,YAAY;QACZ,YAAY;QACZ,IAAI;YACF,eAAe;YACf,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,SAClC,IAAI,CAAC,UACL,MAAM,CAAC;gBAAC;aAAS,EACjB,MAAM,GACN,MAAM;YAET,IAAI,OAAO;gBACT,YAAY,MAAM,OAAO;gBACzB,YAAY;gBACZ;YACF;YAEA,mCAAmC;YACnC,IAAI,SAAS,iBAAiB,MAAM,GAAG,GAAG;gBACxC,MAAM,YAAY,iBAAiB,GAAG,CAAC,CAAA,YAAa,CAAC;wBACnD,YAAY;wBACZ,UAAU,MAAM,EAAE;oBACpB,CAAC;gBACD,MAAM,EAAE,OAAO,QAAQ,EAAE,GAAG,MAAM,SAC/B,IAAI,CAAC,kBACL,MAAM,CAAC;gBACV,IAAI,UAAU;oBACZ,YAAY;gBACd;YACF;YAEA,uCAAuC;YACvC,MAAM;YACN,eAAe;YACf,YAAY;gBACV,OAAO;gBACP,aAAa;gBACb,WAAW;gBACX,cAAc;gBACd,eAAe;gBACf,OAAO;gBACP,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,MAAM;YACR;YACA,oBAAoB,EAAE;QACxB,EAAE,OAAO,KAAU;YACjB,YAAY,uBAAuB,CAAC,KAAK,WAAW,OAAO,IAAI;QACjE;QACA,YAAY;IACd;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAM,WAAU;0BACf,cAAA,6LAAC;oBAAI,WAAU;8BAAyB;;;;;;;;;;;0BAI1C,6LAAC;gBAAK,WAAU;;kCACd,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAyB;;;;;;0CACvC,6LAAC;gCACC,SAAS,IAAM,eAAe;gCAC9B,WAAU;;kDAEV,6LAAC;wCAAK,WAAU;kDAAe;;;;;;oCAAQ;;;;;;;;;;;;;kCAK3C,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAM,WAAU;;8CACf,6LAAC;8CACC,cAAA,6LAAC;wCAAG,WAAU;;0DACZ,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;0DACpC,6LAAC;gDAAG,WAAU;0DAAsB;;;;;;;;;;;;;;;;;8CAGxC,6LAAC;8CACE,wBACC,6LAAC;kDACC,cAAA,6LAAC;4CAAG,SAAS;4CAAI,WAAU;sDAAmB;;;;;;;;;;+CAE9C,OAAO,MAAM,KAAK,kBACpB,6LAAC;kDACC,cAAA,6LAAC;4CAAG,SAAS;4CAAI,WAAU;sDAAiC;;;;;;;;;;+CAK9D,OAAO,GAAG,CAAC,CAAC,sBACV,6LAAC;4CAAkB,WAAU;;8DAC3B,6LAAC;oDAAG,WAAU;8DAAa,MAAM,EAAE;;;;;;8DACnC,6LAAC;oDAAG,WAAU;8DAAa,MAAM,KAAK;;;;;;8DACtC,6LAAC;oDAAG,WAAU;8DAAa,MAAM,YAAY;;;;;;8DAC7C,6LAAC;oDAAG,WAAU;8DAAa,MAAM,WAAW;;;;;;8DAC5C,6LAAC;oDAAG,WAAU;8DAAa,MAAM,SAAS;;;;;;8DAC1C,6LAAC;oDAAG,WAAU;8DAAa,MAAM,aAAa,GAAG,MAAM;;;;;;8DACvD,6LAAC;oDAAG,WAAU;8DAAa,MAAM,KAAK;;;;;;8DACtC,6LAAC;oDAAG,WAAU;8DAAa,MAAM,GAAG,GAAG,MAAM;;;;;;8DAC7C,6LAAC;oDAAG,WAAU;8DAAa,MAAM,GAAG,GAAG,MAAM;;;;;;8DAC7C,6LAAC;oDAAG,WAAU;8DAAa,MAAM,GAAG,GAAG,MAAM;;;;;;8DAC7C,6LAAC;oDAAG,WAAU;8DAAa,MAAM,IAAI,GAAG,MAAM;;;;;;;2CAXvC,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;oBAoB1B,6BACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAyB;;;;;;gCACtC,0BACC,6LAAC;oCAAI,WAAU;8CAAqB;;;;;;8CAEtC,6LAAC;oCAAK,UAAU;;sDACd,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAa;;;;;;8DAC9B,6LAAC;oDACC,WAAU;oDACV,aAAY;oDACZ,OAAO,SAAS,KAAK;oDACrB,UAAU,CAAA,IAAK,YAAY;4DAAE,GAAG,QAAQ;4DAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wDAAC;oDAChE,QAAQ;;;;;;;;;;;;sDAGZ,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAa;;;;;;8DAC9B,6LAAC;oDACC,WAAU;oDACV,aAAY;oDACZ,OAAO,SAAS,YAAY;oDAC5B,UAAU,CAAA,IAAK,YAAY;4DAAE,GAAG,QAAQ;4DAAE,cAAc,EAAE,MAAM,CAAC,KAAK;wDAAC;;;;;;;;;;;;sDAG3E,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAa;;;;;;8DAC9B,6LAAC;oDACC,WAAU;oDACV,aAAY;oDACZ,OAAO,SAAS,WAAW;oDAC3B,UAAU,CAAA,IAAK,YAAY;4DAAE,GAAG,QAAQ;4DAAE,aAAa,EAAE,MAAM,CAAC,KAAK;wDAAC;oDACtE,MAAM;;;;;;;;;;;;sDAGV,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAa;;;;;;8DAC9B,6LAAC;oDACC,WAAU;oDACV,aAAY;oDACZ,OAAO,SAAS,SAAS;oDACzB,UAAU,CAAA,IAAK,YAAY;4DAAE,GAAG,QAAQ;4DAAE,WAAW,EAAE,MAAM,CAAC,KAAK;wDAAC;oDACpE,QAAQ;;;;;;;;;;;;sDAGZ,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAa;;;;;;8DAC9B,6LAAC;oDACC,MAAK;oDACL,SAAS,SAAS,aAAa;oDAC/B,UAAU,IAAM,YAAY;4DAAE,GAAG,QAAQ;4DAAE,eAAe,CAAC,SAAS,aAAa;wDAAC;;;;;;;;;;;;sDAGtF,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAa;;;;;;8DAC9B,6LAAC;oDACC,WAAU;oDACV,MAAK;oDACL,KAAK;oDACL,KAAK;oDACL,OAAO,SAAS,KAAK;oDACrB,UAAU,CAAA,IAAK,YAAY;4DAAE,GAAG,QAAQ;4DAAE,OAAO,SAAS,EAAE,MAAM,CAAC,KAAK;wDAAE;;;;;;;;;;;;sDAG9E,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;;sEACf,6LAAC;4DACC,MAAK;4DACL,SAAS,SAAS,GAAG;4DACrB,UAAU,IAAM,YAAY;oEAAE,GAAG,QAAQ;oEAAE,KAAK,CAAC,SAAS,GAAG;gEAAC;4DAC9D,WAAU;;;;;;wDACV;;;;;;;8DAGJ,6LAAC;oDAAM,WAAU;;sEACf,6LAAC;4DACC,MAAK;4DACL,SAAS,SAAS,GAAG;4DACrB,UAAU,IAAM,YAAY;oEAAE,GAAG,QAAQ;oEAAE,KAAK,CAAC,SAAS,GAAG;gEAAC;4DAC9D,WAAU;;;;;;wDACV;;;;;;;8DAGJ,6LAAC;oDAAM,WAAU;;sEACf,6LAAC;4DACC,MAAK;4DACL,SAAS,SAAS,GAAG;4DACrB,UAAU,IAAM,YAAY;oEAAE,GAAG,QAAQ;oEAAE,KAAK,CAAC,SAAS,GAAG;gEAAC;4DAC9D,WAAU;;;;;;wDACV;;;;;;;8DAGJ,6LAAC;oDAAM,WAAU;;sEACf,6LAAC;4DACC,MAAK;4DACL,SAAS,SAAS,IAAI;4DACtB,UAAU,IAAM,YAAY;oEAAE,GAAG,QAAQ;oEAAE,MAAM,CAAC,SAAS,IAAI;gEAAC;4DAChE,WAAU;;;;;;wDACV;;;;;;;;;;;;;sDAIN,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAG,WAAU;8DAAe;;;;;;8DAC7B,6LAAC;oDAAI,WAAU;8DACZ,SAAS,GAAG,CAAC,CAAA,wBACZ,6LAAC;4DAAuB,WAAU;;8EAChC,6LAAC;oEACC,MAAK;oEACL,SAAS,iBAAiB,QAAQ,CAAC,QAAQ,EAAE;oEAC7C,UAAU,IAAM,sBAAsB,QAAQ,EAAE;oEAChD,WAAU;;;;;;8EAEZ,6LAAC;8EAAM,QAAQ,IAAI;;;;;;;2DAPT,QAAQ,EAAE;;;;;;;;;;;;;;;;sDAY5B,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDACC,MAAK;oDACL,SAAS,IAAM,eAAe;oDAC9B,WAAU;8DACX;;;;;;8DAGD,6LAAC;oDACC,MAAK;oDACL,WAAU;oDACV,UAAU;8DAET,WAAW,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU9C;GA/TwB;KAAA","debugId":null}}]
}